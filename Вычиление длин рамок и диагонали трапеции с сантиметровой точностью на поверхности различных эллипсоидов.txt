#include <math.h>
#include <iostream>
#include <stdio.h>
class Ellipsoid {
  public:
  void KrassovskogoCountA1A2CD(float N1, float N2, float c, float V12, float V22) {
    using namespace std;
    float B1=(51.5*3.1415926535)/180;
    float B2=(51.67*3.1415926535)/180;
    float DeltaL=(0.25*3.1415926535)/180;
    float DeltaA1=(N1*cos(B1)*DeltaL)/500;
    float DeltaA2=(N2*cos(B2)*DeltaL)/500;
    printf("  ЗНАЧЕНИЕ ДУГИ а1 ДЛЯ ЭЛЛИПСОИДА КРАССОВСКОГО (в см) =%0.6f\n\n",DeltaA1);
    printf("  ЗНАЧЕНИЕ ДУГИ а2 ДЛЯ ЭЛЛИПСОИДА КРАССОВСКОГО (в см) =%0.6F\n\n",DeltaA2);
    float M1=(c*V12)/(V12*V12);
    float M2=(c*V22)/(V22*V22);
    float Mcr=(M1+M2)/2;
    float DeltaB=(0.17*3.1415926535)/180;
    float DeltaC=(Mcr*DeltaB)/500;
    printf("    ЗНАЧЕНИЕ ДЛИНЫ РАМКИ с ДЛЯ ЭЛЛИПСОИДА КРАССОВСКОГО (в см) =%0.6f\n\n", DeltaC);
    float D2=((DeltaA1*DeltaA2)+(DeltaC*DeltaC));
    float D=sqrt(D2);
    printf("    ЗНАЧЕНИЕ ДЛИНЫ ДИАГОНАЛИ ДЛЯ ЭЛЛИПСОИДА КРАССОВСКОГО (в см) =%0.6f\n\n",D);
  };
  void WGS84CountA1A2CD(float N1, float N2,float c, float V12, float V22) {
    using namespace std;
    float B1=(51.5*3.1415926535)/180;
    float B2=(51.67*3.1415926535)/180;
    float DeltaL=(0.25*3.1415926535)/180;
    float DeltaA1=(N1*cos(B1)*DeltaL)/500;
    float DeltaA2=(N2*cos(B2)*DeltaL)/500;
    printf("  ЗНАЧЕНИЕ ДУГИ а1 ДЛЯ ЭЛЛИПСОИДА WGS84 (в см) =%0.6f\n\n",DeltaA1);
    printf("  ЗНАЧЕНИЕ ДУГИ а2 ДЛЯ ЭЛЛИПСОИДА WGS84 (в см) =%0.6F\n\n",DeltaA2);
    float M1=(c*V12)/(V12*V12);
    float M2=(c*V22)/(V22*V22);
    float Mcr=(M1+M2)/2;
    float DeltaB=(0.17*3.1415926535)/180;
    float DeltaC=(Mcr*DeltaB)/500;
    printf("    ЗНАЧЕНИЕ ДЛИНЫ РАМКИ с ДЛЯ ЭЛЛИПСОИДА WGS (в см) =%0.6f\n\n", DeltaC);
    float D2=((DeltaA1*DeltaA2)+(DeltaC*DeltaC));
    float D=sqrt(D2);
    printf("    ЗНАЧЕНИЕ ДЛИНЫ ДИАГОНАЛИ ДЛЯ ЭЛЛИПСОИДА WGS84 (в см) =%0.6f\n\n",D);
  };
  void PZ90CountA1A2CD(float N1, float N2,float c, float V12, float V22) {
    using namespace std;
    float B1=(51.5*3.1415926535)/180;
    float B2=(51.67*3.1415926535)/180;
    float DeltaL=(0.25*3.1415926535)/180;
    float DeltaA1=(N1*cos(B1)*DeltaL)/500;
    float DeltaA2=(N2*cos(B2)*DeltaL)/500;
    printf("  ЗНАЧЕНИЕ ДУГИ а1 ДЛЯ ЭЛЛИПСОИДА ПЗ90 (в см) =%0.6f\n\n",DeltaA1);
    printf("  ЗНАЧЕНИЕ ДУГИ а2 ДЛЯ ЭЛЛИПСОИДА ПЗ90 =%0.6F\n\n",DeltaA2);
    float M1=(c*V12)/(V12*V12);
    float M2=(c*V22)/(V22*V22);
    float Mcr=(M1+M2)/2;
    float DeltaB=(0.17*3.1415926535)/180;
    float DeltaC=(Mcr*DeltaB)/500;
    printf("    ЗНАЧЕНИЕ ДЛИНЫ РАМКИ с ДЛЯ ЭЛЛИПСОИДА ПЗ90 (в см) =%0.6f\n\n", DeltaC);
    float D2=((DeltaA1*DeltaA2)+(DeltaC*DeltaC));
    float D=sqrt(D2);
    printf("    ЗНАЧЕНИЕ ДЛИНЫ ДИАГОНАЛИ ДЛЯ ЭЛЛИПСОИДА ПЗ90 (в см) =%0.6f\n\n",D);
  };
  void MOJVARIANTCountA1A2CD(float N1, float N2,float c, float V12, float V22) {
    using namespace std;
    float B1=(51.5*3.1415926535)/180;
    float B2=(51.67*3.1415926535)/180;
    float DeltaL=(0.25*3.1415926535)/180;
    float DeltaA1=(N1*cos(B1)*DeltaL)/500;
    float DeltaA2=(N2*cos(B2)*DeltaL)/500;
    printf("  ЗНАЧЕНИЕ ДУГИ а1 ДЛЯ МОЕГО ЭЛЛИПСОИДА (ВАРИАНТ 3) =%0.6f\n\n",DeltaA1);
    printf("  ЗНАЧЕНИЕ ДУГИ а2 ДЛЯ МОЕГО ЭЛЛИПСОИДА (ВАРИАНТ 3) =%0.6F\n\n",DeltaA2);
    float M1=(c*V12)/(V12*V12);
    float M2=(c*V22)/(V22*V22);
    float Mcr=(M1+M2)/2;
    float DeltaB=(0.17*3.1415926535)/180;
    float DeltaC=(Mcr*DeltaB)/500;
    printf("    ЗНАЧЕНИЕ ДЛИНЫ РАМКИ с ДЛЯ МОЕГО ЭЛЛИПСОИДА (ВАРИАНТ 3) (в см) =%0.6f\n\n", DeltaC);
    float D2=((DeltaA1*DeltaA2)+(DeltaC*DeltaC));
    float D=sqrt(D2);
    printf("    ЗНАЧЕНИЕ ДЛИНЫ ДИАГОНАЛИ ДЛЯ МОЕГО ЭЛЛИПСОИДА (ВАРИАНТ 3) (в см) =%0.6f\n\n",D);
  };
  void KrassovskogoCountP(float eks1){
    using namespace std;
    float Bmal2=6356.863*6356.863;
    float B1=(51.5*3.1415926535)/180;
    float B2=(51.67*3.1415926535)/180;
    float DeltaL=(0.25*3.1415926535)/180;
    float sin3B1=sin(B1)*sin(B1)*sin(B1);
    float sin5B1=sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1);
    float sin7B1=sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1);
    float sin3B2=sin(B2)*sin(B2)*sin(B2);
    float sin5B2=sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2);
    float sin7B2=sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2);
    float eks14=eks1*eks1;
    float eks16=eks1*eks1*eks1;
    float L=0.67*eks1*(sin3B2-sin3B1);
    float LL=0.6*eks14*(sin5B2-sin5B1);
    float LLL=0.57*eks16*(sin7B2-sin7B1);
    float P2=Bmal2*DeltaL*(sin(B2)-sin(B1)+L+LL+LLL);
    printf("  ЗНАЧЕНИЕ ПЛОЩАДИ СЪЕМОЧНОЙ ТРАПЕЦИИ ЭЛЛИПСОИДА КРАССОВСКОГО (в км2) =%0.2f\n\n",P2);
  };
    void WGS84CountP(float eks1){
    using namespace std;
    float Bmal2=6356.752*6356.752;
    float B1=(51.5*3.1415926535)/180;
    float B2=(51.67*3.1415926535)/180;
    float DeltaL=(0.25*3.1415926535)/180;
    float sin3B1=sin(B1)*sin(B1)*sin(B1);
    float sin5B1=sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1);
    float sin7B1=sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1);
    float sin3B2=sin(B2)*sin(B2)*sin(B2);
    float sin5B2=sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2);
    float sin7B2=sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2);
    float eks14=eks1*eks1;
    float eks16=eks1*eks1*eks1;
    float L=0.67*eks1*(sin3B2-sin3B1);
    float LL=0.6*eks14*(sin5B2-sin5B1);
    float LLL=0.57*eks16*(sin7B2-sin7B1);
    float P2=Bmal2*DeltaL*(sin(B2)-sin(B1)+L+LL+LLL);
    printf("  ЗНАЧЕНИЕ ПЛОЩАДИ СЪЕМОЧНОЙ ТРАПЕЦИИ ЭЛЛИПСОИДА WGS84 (в км2) =%0.2f\n\n",P2);
  };
    void PZ90CountP(float eks1){
    using namespace std;
    float Bmal2=6356.7515*6356.7515;
    float B1=(51.5*3.1415926535)/180;
    float B2=(51.67*3.1415926535)/180;
    float DeltaL=(0.25*3.1415926535)/180;
    float sin3B1=sin(B1)*sin(B1)*sin(B1);
    float sin5B1=sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1);
    float sin7B1=sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1);
    float sin3B2=sin(B2)*sin(B2)*sin(B2);
    float sin5B2=sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2);
    float sin7B2=sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2);
    float eks14=eks1*eks1;
    float eks16=eks1*eks1*eks1;
    float L=0.67*eks1*(sin3B2-sin3B1);
    float LL=0.6*eks14*(sin5B2-sin5B1);
    float LLL=0.57*eks16*(sin7B2-sin7B1);
    float P2=Bmal2*DeltaL*(sin(B2)-sin(B1)+L+LL+LLL);
    printf("  ЗНАЧЕНИЕ ПЛОЩАДИ СЪЕМОЧНОЙ ТРАПЕЦИИ ЭЛЛИПСОИДА ПЗ90 (в км2) =%0.2f\n\n",P2);
  };
    void MOJVARIANTCountP(float eks1){
    using namespace std;
    float Bmal2=6358.28007*6358.28007;
    float B1=(51.5*3.1415926535)/180;
    float B2=(51.67*3.1415926535)/180;
    float DeltaL=(0.25*3.1415926535)/180;
    float sin3B1=sin(B1)*sin(B1)*sin(B1);
    float sin5B1=sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1);
    float sin7B1=sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1)*sin(B1);
    float sin3B2=sin(B2)*sin(B2)*sin(B2);
    float sin5B2=sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2);
    float sin7B2=sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2)*sin(B2);
    float eks14=eks1*eks1;
    float eks16=eks1*eks1*eks1;
    float L=0.67*eks1*(sin3B2-sin3B1);
    float LL=0.6*eks14*(sin5B2-sin5B1);
    float LLL=0.57*eks16*(sin7B2-sin7B1);
    float P2=Bmal2*DeltaL*(sin(B2)-sin(B1)+L+LL+LLL);
    printf("  ЗНАЧЕНИЕ ПЛОЩАДИ СЪЕМОЧНОЙ ТРАПЕЦИИ МОЕГО ЭЛЛИПСОИДА (ВАРИАНТ 3) (в км2) =%0.2f\n\n",P2);
  };
};
int main() {
  using namespace std;
  Ellipsoid Krassovskogo;
  Ellipsoid WGS84;
  Ellipsoid PZ90;
  Ellipsoid MOJ;
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"  ДАНО: масштаб трапеции 1: 50 000, значение широты точки А рамки а1 трапеции условно принять равным В1 = 50 ГРАДУСОВ +30'n, где n - номер студента по журналу. Широта точки В2 рамки а2 определяется в соответствии с номенклатурой трапеции.\n\n ЗНАЧЕНИЯ ДЛЯ ВЫЧИСЛЕНИЙ А ТАКЖЕ РАБОЧИЕ ФОРМУЛЫ БЕРУТСЯ ИЗ ПРЕДЫДУЩИХ РАБОТ.\n\n";
  cout<<"  ЗАДАНИЕ 1. Вычислить значения длины рамок a1, a2, c и диагонали d трапеции в см на поверхности эллипсоидов Красовского, WGS-84, ПЗ90 и индивидуального варианта.\n\n";
  Krassovskogo.KrassovskogoCountA1A2CD(6394689.8800,6395309.9145,6399699,1.0026113987,1.0025918484);
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------";
  WGS84.WGS84CountA1A2CD(6394584.3644, 6395204.4930,6399593.5,1.0026117563,1.0025923252);
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------";
  PZ90.PZ90CountA1A2CD(6394582.9286, 6395203.0407,6399592,1.0026117563,1.0025922060);
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------";
  MOJ.MOJVARIANTCountA1A2CD(6391707.5, 6392408.5,6399773.5,1.0025255680,1.0025067329);
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------\n\n";
  cout<<"   ЗАДАНИЕ 2. Вычислить площадь съемочной трапеции по формуле Р км2 = b2 ΔL(sin B2 – sin B1 + I + II + III) км\n\n";
  Krassovskogo.KrassovskogoCountP(0.0066934223);
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------";
  WGS84.WGS84CountP(0.0066945418);
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------";
  PZ90.PZ90CountP(0.0066943662);
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------";
  MOJ.MOJVARIANTCountP(0.0064836210);
  cout<<"------------------------------------------------------------------------------------------";
  cout<<"------------------------------------------------------------------------------------------";
  return 0;
}